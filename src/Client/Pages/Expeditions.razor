@attribute [Authorize(Roles = "member")]
@page "/expeditions"
@layout MainLayoutWithoutAside

<div class="d-flex flex-row justify-content-between align-items-center">
    <div class="form-check">
        <input type="checkbox" id="inputShowInactive" class="form-check-input" @bind="ShowInactive">
        <label for="inputShowInactive" class="form-check-label">Показать расформированные</label>
    </div>
    <button class="btn btn-primary" @onclick="async () => await Modal.ShowAsync()">Созвать экспедицию</button>
</div>

<table class="table">
    <thead>
    <tr>
        <th scope="col">№</th>
        <th scope="col">Командир</th>
        <th scope="col">Активна c</th>
        <th scope="col">Активна до</th>
        <th scope="col">Численность</th>
    </tr>
    </thead>
    <tbody>
    @if (Models is null)
    {
        <tr>
            <th scope="row">Загрузка…</th>
        </tr>
    }
    else
    {
        @foreach (Expedition expedition in Models.Where(x => ShowInactive || x.IsActive))
        {
            <tr @onclick="() => ToExpeditionPage(expedition.Id)">
                <th scope="row">@expedition.Id.ToString()</th>
                <td>
                    <a href="player/@expedition.CommanderId">@PlayerNicknamesService.GetFullNicknameFromCache(expedition.CommanderId)</a>
                </td>
                <td>
                    @expedition.StartDate.ToString("d")
                </td>
                <td>
                    @expedition.EndDate.ToString("d")
                </td>
                <td>
                    @(expedition.Players?.Count.ToString() ?? "—")
                </td>
            </tr>
        }
    }
    </tbody>
</table>

<Modal @ref="Modal" class="modal modal-lg">
    <HeaderTemplate>
        <h5>Создать экспедицию</h5>
    </HeaderTemplate>
    <BodyTemplate>
        <ExpeditionCreateDialog/>
    </BodyTemplate>
</Modal>

<LayoutSetter>
    <Header>

    </Header>
    <Aside>

    </Aside>
    <Footer>

    </Footer>
</LayoutSetter>